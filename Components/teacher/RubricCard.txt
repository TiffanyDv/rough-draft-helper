import React from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Edit, Trash2, CheckCircle, XCircle } from "lucide-react";

export default function RubricCard({ rubric, onEdit, onDelete, onToggleActive }) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
    >
      <Card className="h-full shadow-lg hover:shadow-xl transition-all duration-300 border-0 bg-white rounded-2xl overflow-hidden">
        <CardHeader className="bg-gradient-to-br from-orange-50 to-orange-100 border-b border-orange-200">
          <div className="flex justify-between items-start">
            <div className="flex-1">
              <CardTitle className="text-xl mb-2">{rubric.title}</CardTitle>
              {rubric.description && (
                <p className="text-sm text-gray-600">{rubric.description}</p>
              )}
            </div>
            <Badge 
              variant={rubric.is_active ? "default" : "secondary"}
              className={rubric.is_active ? "bg-green-500" : "bg-gray-400"}
            >
              {rubric.is_active ? "Active" : "Inactive"}
            </Badge>
          </div>
        </CardHeader>
        <CardContent className="p-6">
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <span className="text-sm text-gray-600">Total Points</span>
              <span className="text-2xl font-bold text-orange-600">{rubric.total_points}</span>
            </div>
            
            <div>
              <p className="text-sm font-medium text-gray-700 mb-2">Criteria ({rubric.criteria?.length || 0})</p>
              <div className="space-y-2">
                {rubric.criteria?.slice(0, 3).map((criterion, index) => (
                  <div key={index} className="flex justify-between items-center text-sm">
                    <span className="text-gray-600">{criterion.name}</span>
                    <span className="font-semibold text-orange-600">{criterion.points}pts</span>
                  </div>
                ))}
                {rubric.criteria?.length > 3 && (
                  <p className="text-xs text-gray-500">+{rubric.criteria.length - 3} more</p>
                )}
              </div>
            </div>

            <div className="flex gap-2 pt-4 border-t">
              <Button
                variant="outline"
                size="sm"
                onClick={() => onToggleActive(rubric)}
                className="flex-1"
              >
                {rubric.is_active ? (
                  <>
                    <XCircle className="w-4 h-4 mr-1" />
                    Deactivate
                  </>
                ) : (
                  <>
                    <CheckCircle className="w-4 h-4 mr-1" />
                    Activate
                  </>
                )}
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={() => onEdit(rubric)}
              >
                <Edit className="w-4 h-4" />
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={() => onDelete(rubric.id)}
                className="text-red-600 hover:text-red-700"
              >
                <Trash2 className="w-4 h-4" />
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}